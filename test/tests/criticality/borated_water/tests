[Tests]
  design = 'BoratedWater.md'
  issues = '#1158'
  [negative_min]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/CriticalitySearch/minimum=-1'
    expect_err = "The 'minimum' boron ppm \(-1.000000\) must be positive!"
    requirement = 'The system shall error if an invalid minimum boron ppm is provided.'
    capabilities = 'openmc'
  []
  [non_dilute]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/CriticalitySearch/maximum=53000'
    expect_err = "The borated water composition is computed using a dilute species approximation. Results will not be accurate if the boron species is no longer dilute, which we take as 5\% weight concentration or higher. Please decrease 'maximum' \(53000.000000\) to an upper limit which is in the dilute regime."
    requirement = 'The system shall error if an invalid maximum boron ppm is provided.'
    capabilities = 'openmc'
  []
  [warn_nuclides]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/CriticalitySearch/material_id=2 --error'
    expect_err = "The criticality search will clear out all nuclides in material 2 and replace them with the naturally-abundant nuclides in hydrogen, oxygen, and boron. Any other nuclides which existed in the material will be deleted.\n\nThe material you provided contains nuclides which are not the natural isotopes of H, B, and O: U234 U235 U238 H3. These will be deleted from material 2 when the boron concentration is changed."
    requirement = "The system shall warn the user if nuclides will be erased by the borated water criticality search. This test covers both non-H,B,O elements as well as non-natural isotopes of these elements."
    capabilities = 'openmc'
  []
  [absent_nuclides]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/CriticalitySearch/absent_nuclides="W182" --error'
    expect_err = "Only absent isotopes of hydrogen, oxygen, or boron will be used to adjust natural abundances. The entry 'W182' will be unused."
    requirement = "The system shall warn the user if they are omitting a nuclide from their cross section library which is irrelevant for boric acid control."
    capabilities = 'openmc'
  []
  [borated_water]
    type = CSVDiff
    input = openmc.i
    csvdiff = openmc_out.csv
    requirement = "The system shall perform a criticality search based on boron weight ppm in water. This test changes the water density and then searches for a criticality point; the resulting ppm is compared to a standalone OpenMC model (the comparison is done when running with many more particles for both scenarios). The multiplication factors agree within statistics."
    # the relative nuclide concentrations are also printed to the screen and shown to match against
    # those added by OpenMC's borated_water function
    capabilities = 'openmc'
  []
[]
